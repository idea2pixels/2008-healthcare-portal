%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.2%%For: (Heather Dance) ()%%Title: (caduceusEMS.eps)%%CreationDate: 5/19/08 7:31 PM%%BoundingBox: 109 22 671 584%%HiResBoundingBox: 109.9082 22.5107 670.8604 583.8809%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 400.5 299.5 400.5 299.5%AI3_TileBox: 94 -96 706 696%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 800 600%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -138.3828 781.3848 0.6667 737 719 18 0 0 116 169 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 22640 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDAFFFA9070D0707070D0707070D0707070D0707070D0707070D07%07070DFD05072FA9FD5EFFA90D2F857E857E857E857E857E857E857E857E%857E857E857E857E857E857E5A07FD5FFFAF0784A8847E847E847E847E84%7E847E847E847E847E847E847E847E847EFF7E07A9FD5EFFA90D847E0707%070D0707070D0707070D0707070D0707070D0707070D07077EA907FD5FFF%AF07845A07070D072F070D072F070D072F070D072F070D072F070D072F07%847E0DAFFD5EFFA80D847E0730072F0730072F0730072F0730072F073007%2F0730072F0707848507FD5FFFA907855A07070D0707070D0707070D0707%070D0707070D0707070D070707847E07A8FD5EFFA930847E073007300730%073007300730073007300730073007300730070D848507FD5FFFA907A95A%07072F070D072F070D072F070D072F070D072F070D072F070D07857E07A9%FD5EFFA90D7E7E072F0730072F0730072F0730072F0730072F0730072F07%3007077E8507FD5FFFAF07845AFD04070D0707070D0707070D0707070D07%07070D0707070D07847E07A9FD5EFFA90D84850730073007300730073007%3007302F30073007300730073007077E8507FD5FFFAF07845A07070D072F%070D072F070707A9FFFFA830070D072F070D072F07847E0DAFFD5EFFA80D%847E0730072F0730072F0730075AFD04FF5A0D072F0730072F0707848507%FD5FFFA907855A07070D0707070DFD04072FFD04FF5A070D0707070D0707%07847E07A8FD5EFFA930847E073007300730073007300730AFFFFFFF5A0D%073007300730070D848507FD5FFFA907A95A07072F070D072F0707075A5A%7E5AA9FF5A072F070D072F070D07857E07A9FD40FFA8FD1DFFA90D7E7E07%2F0730070D075AA8FD05FF5AA95A070730072F073007077E8507FD1DFFAF%AFFD21FFA80707A9FD1BFFAF07845AFD04070D0784FFFF7E84A8FFFF847E%7E0707070D0707070D07847E07A9FD1BFF7E2F07FD21FF5A0730075AA9FD%19FFA90D8485073007300785FD08FF5AFF5A0D07300730073007077E8507%FD1BFF30072F305AFD1FFFA9077EFF8407075AFD18FFAF07845A07070D07%30FD08FF5AA9FF5A070D072F070D072F07847E0DAFFD17FFA95A070D7EFF%5A07A8FD1EFF0730FF5AA8FF5A0707A9FD16FFA80D847E073007075AFD07%FF5A85FFFF5A0D072F0730072F0707848507FD17FF7E30075AAFA95AFF07%30FD1DFF5A078484070753FFA8300130A8FD14FFA907855A07070D0784FD%06FF5A84FFFFFF5A070D0707070D070707847E07A8FD14FFA92F072FAFA8%5A070784840184FD1BFFAF0D30FF0D2F070D0785FFA9070754FD13FFA930%847E07300730FD04FFA9A92F30FD04FF3030073007300730070D848507FD%13FFA95A073084FF7E2F07300730FF5A0DFD1BFF5A07FF5A07070D070D07%2F84FF5A07077EFD11FFA907A95A07070754FFFFFFA92F07072FFD04FF54%072F070D072F070D07857E07A9FD11FF5A070784FF840707070D072F077E%A8075AFD19FFA9077EA90D0730072F073007072FFFAF5A073084FD0FFFA9%0D7E7E072F0785FFFFFFA9072F0730FD04FF300D0730072F073007077E85%07FD10FF8507075AFFA85A070D0730072F073007FF540DA9FD18FF2F07A8%5A0707070D0707070D0707075AA9A907072FA9FD0DFFAF07845A0707077E%FFFFFF5A0707072FFD04FF5A0707070D0707070D07847E07A9FD0DFF8430%0230A8FF5307070D0707070DFD040753FF075AFD17FF840784A907300730%073007300730073007307EFF842F077EFD0CFFA90D8485072F07A9FFFFFF%8507300730FD04FF300D07300730073007077E8507FD0DFF540707A9FF85%070D07300730073007300730070DA88507A9FD15FFAF2F2FFF070D070D07%2F070D072F070D072F07072FA9AF5A070D7EFD0AFFAF07845A0707077EFF%FFFF5A0707072FFD04FF5A070D072F070D072F07847E0DAFFD09FFAF7E07%075AFF842F070D070D072F070D072F070D072F0730A92F2FFD15FF7E07AF%7E070730072F0730072F0730072F0730070D075AA9FF2F072FA9FD08FFA8%0D847E07300784FFFFFF8507300730FD04FF2F0D072F0730072F07078485%07FD09FF8430075AAFAF2F0D072F0730072F0730072F0730072F073007A9%84077EFD14FF075AA82F0707070D0707070D0707070D0707070D0707070D%5AFF842F0754A8FD06FFA907855A07070753FFFFFF840707072FFD04FF54%070D0707070D070707847E07A8FD06FFA92F072FA9A85A0707070D070707%0D0707070D0707070DFD0507FF2F0DA9FD12FF5A07A97E07300730073007%3007300730073007300730073007070DA9FF85070D5AFD05FFA930847E07%300730FD04FF2F300730FD04FF3030073007300730070D848507FD05FFAF%5A073084FF7E30072F07300730073007300730073007300730073007075A%FF077EFD11FF84075AA9072F070D072F070D072F070D072F070D072F070D%072F07070730A8FF53070784FFFFFFA907A95A07070D07AFFFFFFF5A070D%2FFD04FF54072F070D072F070D07857E07A9FFFFFF5A0D075AA9A92F0707%2F070D072F070D072F070D072F070D072F070D072F0707A85A07A9FD10FF%3007FF2F070730072F0730072F0730072F0730072F0730072F0730072F07%0D5AFFA85A073084FFA90D7E7E072F070D7EFFFFFF84070730FD04FF300D%0730072F073007077E8507FFFFA92F072FFFA95A070D072F0730072F0730%072F0730072F0730072F0730072F0730075AAF2F30FD0FFF8407A87EFD04%070D0707070D0707070D0707070D0707070D0707070DFD05077EA8A90707%2FA907845AFD04075AFD04FF2F072FFD04FF5A0707070D0707070D07847E%0DA854012F84FF59FD04070D0707070D0707070D0707070D0707070D0707%070D0707070D07A97E0784FD0EFF0754FF30073007300730073007300730%07300730073007300730073007300730072F073084FF7E0D070D84850730%073007FD04FFAF0730FD04FF300D07300730073007077EA907070785FF85%070D07300730073007300730073007300730073007300730073007300730%070D2FFF2F30FD0DFF5A07A87E072F070D072F070D072F070D072F070D07%2F070D072F070D072F070D072F070D07072FA9A85A07845A07070D07075A%FD04FF7E07FD04FF30070D072F070D072F07847E075AFF84300707072F07%0D072F070D072F070D072F070D072F070D072F070D072F070D072F07077E%A9077EFD0BFFA9075AFF072F0730072F0730072F0730072F0730072F0730%072F0730072F0730072F0730072F070D075AA9A9A97E0730072F0730FD05%FF7EA9FFFFFF2F2F072F0730072F07077EAFA8FF5A070730072F0730072F%0730072F0730072F0730072F0730072F0730072F0730072F07300730AF5A%07FD0BFF5A07FF2FFD04070D0707070D0707070D0707070D0707070D0707%070D0707070D0707070D0707070D070D5AFF5A07070D07070784FD04FF5A%AFFFFFFF2F070D0707070D07070784FF7EFD05070D0707070D0707070D07%07070D0707070D0707070D0707070D0707070D0707070D075AA80753FD09%FFA90785A80D073007300730073007300730073007300730073007300730%0730073007300730073007300730070D2F540730073007302FFD04FF7EA9%FFFFFF2F3007300730073007303030073007300730073007300730073007%3007300730073007300730073007300730073007300730072F07FF5A07A8%FD08FF0730FF30072F070D072F070D072F070D072F070D072F070D072F07%0D072F070D072F070D072F070D072F070D070D070D072F070D07077EFFFF%FF5AAFFFFFFF30072F070D072F070D070D070D072F070D072F070D072F07%0D072F070D072F070D072F070D072F070D072F070D072F070D072F07072F%FF0730FD07FF7E0784A9072F0730072F0730072F0730072F0730072F0730%072F0730072F0730072F0730072F0730072F0730072F0730072F0730072F%0730AFFFFF7EA9FFFFFF54300730072F0730072F0730072F0730072F0730%072F0730072F0730072F0730072F0730072F0730072F0730072F0730072F%0730070784A907A9FD05FFA80D2FFFFD05070D0707070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D070D075AFFFF59FFFFFFA85AA930072F0707070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707070D072FA83007FD05FF7E07AF5A0D07300730073007300730%073007300730073007300730073007300730073007300730073007300730%0730073007300730073007300785FF7EA9FFFFFF54FFFF30073007300730%073007300730073007300730073007300730073007300730073007300730%07300730073007300730073007300785A9075AFFFFFFA9075AFF30070D07%0D072F070D072F070D072F070D072F070D072F070D072F070D072F070D07%2F070D072F070D072F070D072F070D072F070D070D07A95AFFFFFFA85AAF%FF840D070D072F070D072F070D072F070D072F070D072F070D072F070D07%2F070D072F070D072F070D072F070D072F070D072F07072FFF2F07A8FFFF%7E0D0784FFA9070D072F0730072F0730072F0730072F0730072F0730072F%0730072F0730072F0730072F0730072F0730072F0730072F0730072F072F%0D5AA9FFFFFF5AFFFFFF5A0D072F0730072F0730072F0730072F0730072F%0730072F0730072F0730072F0730072F0730072F0730072F0730070D0730%A8FF5A0D07A9FFFFFFA85A012F84FF5A0D0707070D0707070D0707070D07%07070D0707070D0707070D0707070D0707070D0707070D0707070D070707%0D0707070DFD0507FFFFFFA95AA8FFFFFFFD05070D0707070D0707070D07%07070D0707070D0707070D0707070D0707070D0707070D0707070DFD0507%7EA8A907072FFD07FFA92F072FFFAF5A0730073007300730073007300730%073007300730073007300730073007300730073007300730073007300730%0730073007300730FD04FF5AFD04FF7E0730073007300730073007300730%073007300730073007300730073007300730073007300730073007300730%5AFFA8300730A8FD0AFF7E07075AA9A92F07070D072F070D072F070D072F%070D072F070D072F070D072F070D072F070D072F070D072F070D072F070D%072F070D070D07FFFFFFA95AFD04FF840D070D072F070D072F070D072F07%0D072F070D072F070D072F070D072F070D072F070D072F070D070D0730A8%FF53070785FD0EFF5A070D7EFF7E30072F0730072F0730072F0730072F07%30072F0730072F0730072F0730072F0730072F0730072F0730072F073007%2F0730FD04FF5AFD05FF0730072F0730072F0730072F0730072F0730072F%0730072F0730072F0730072F0730072F0730070707A9FF84070D5AFD11FF%A92F0707A9A87E0707070D0707070D0707070D0707070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D070707FFFFFFA830A9%FFFFFFA92F070D0707070D0707070D0707070D0707070D0707070D070707%0D0707070D0707070D0707070D5AFF7E2F075AA8FD14FF8430075AAFFF30%0D0730073007300730073007300730073007300730073007300730073007%300730073007300730073007300730FD04FF2FFD05FF0730073007300730%0730073007300730073007300730073007300730073007300730070D075A%AFFF2F072FA9FD18FF7E07075AFF84300707072F070D072F070D072F070D%072F070D072F070D072F070D072F070D072F070D072F070D072F070707FF%FFFFA85AFD05FF2F072F070D072F070D072F070D072F070D072F070D072F%070D072F070D072F070D07072FA9A95A070D7EFD1CFF5A070785FF850707%0730072F0730072F0730072F0730072F0730072F0730072F0730072F0730%072F0730072F0730072FA8FFFFA97EFD05FF072F0730072F0730072F0730%072F0730072F0730072F0730072F0730072F073007307EFF7E0D077EFD1F%FF8430072FA8FF5A07070D0707070D0707070D0707070D0707070D070707%0D0707070D0707070D0707070D0707070D07A9FFFF5AFD05FF84FD04070D%0707070D0707070D0707070D0707070D0707070D0707070D0707077EA9A9%07072FA9FD22FFA907075AFFA95A070D0730073007300730073007300730%07300730073007300730073007300730073007300730A9FF7E85FD05FF85%07300730073007300730073007300730073007300730073007300730070D%30FFA95A0730A8FD26FF5A07077EA9A92F07072F070D072F070D072F070D%072F070D072F070D072F070D072F070D072F070D070D07FFA87EFD06FF07%0D070D072F070D072F070D072F070D072F070D072F070D072F0707073084%FF5A07077EFD29FFA95A072F84FF7E2F0730072F0730072F0730072F0730%072F0730072F0730072F0730072F0730072F0730A87EAFFD05FF7E070730%072F0730072F0730072F0730072F0730072F0730072F070D0785FFA90707%5AFD2DFFA92F072FAFA85AFD05070D0707070D0707070D0707070D070707%0D0707070D0707070D0707075AA8FD05FF840D0707070D0707070D070707%0D0707070D0707070D0707070D070753FFA82F0130A8FD30FF7E30075AAF%AF2F07073007300730073007300730073007300730073007300730073007%300730A8FD05FFA930073007300730073007300730073007300730073007%300730075AA9FF5A070DA9FD33FFA97E07075AFF7E2F070D070D072F070D%072F070D072F070D072F070D072F070D072F07075AFD06FF30072F070D07%2F070D072F070D072F070D072F070D072F070707A9AF7E07075AFD38FF30%0707A9FF7E070D072F0730072F0730072F0730072F0730072F0730072F07%0D54FD06FF5A072F0730072F0730072F0730072F0730072F0730072F0730%7EFF8430075AA9FD3AFFA82F0630A8FF2FFD04070D0707070D0707070D07%07070D0707070D070707FD06FF84070D0707070D0707070D0707070D0707%070D0707070D075AA8A92F072FA9FD3CFFAF2F072FFFA95A073007300730%073007300730073007300730073007300785FD05FFA90730073007300730%0730073007300730073007300730072F54FFA930075AA9FD3AFFA85A072F%84FF5A07072F070D072F070D072F070D072F070D072F070D072F0730FD06%FF2F07072F070D072F070D072F070D072F070D072F070D072F07070784FF%A8070753FD38FF5A070785FFA9070D072F0730072F0730072F0730072F07%30072F0730072F070D84FD05FF5AA92F2F0730072F0730072F0730072F07%30072F0730072F0730070D073084FF5A07077EFD34FF84070753FFA83007%07070D0707070D0707070D0707070D0707070D0707070D070707FD05FF7E%84A82F0707070D0707070D0707070D0707070D0707070D0707070DFD0407%2FA9A85A072F7EFD30FFA930075AA9FF5A0E073007300730073007300730%0730073007300730073007300730077EFD04FFAF7EFFFF072F0730073007%300730073007300730073007300730073007300730070D077EFFAF2F0730%AFFD2CFFAF2F0707A9A9840707072F070D072F070D072F070D072F070D07%2F070D072F070D072F07077EFD04FF8484FFA82F070D072F070D072F070D%072F070D072F070D072F070D072F070D072F0707072F7EFF7E0D075AA8FD%29FF8407075AFF84300730072F0730072F0730072F0730072F0730072F07%30072F0730072F073007A9FD04FF5AFFFFAF0730072F0730072F0730072F%0730072F0730072F0730072F0730072F0730072F07072FA9AF7E070D7EFD%26FF7E2F015AA8A92FFD04070D0707070D0707070D0707070D0707070D07%07070D0707070D0707070DA8FFFFFF7E84FFFFA80D070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070DFD05075AA8AF2F0707%A9FD22FFAF2F072FAFFF7E070E0730073007300730073007300730073007%30073007300730073007300730073007AFFFFFFF7E7EFFFFFF0730073007%300730073007300730073007300730073007300730073007300730073007%2F07305AFFA830075AA9FD1EFFA95A072F7EFF7E2F0707072F070D072F07%0D072F070D072F070D072F070D072F070D072F070D072F070D070784FFFF%FF7E84FFFFA80D072F070D072F070D072F070D072F070D072F070D072F07%0D072F070D072F070D072F070D07070784AF8407075AFD1CFF5A2F077EFF%A92F070730072F0730072F0730072F0730072F0730072F0730072F073007%2F0730072F0730072F077EFFFFFF8584FFFFFF072F0730072F0730072F07%30072F0730072F0730072F0730072F0730072F0730072F0730072F072F07%30A8FF5A070785FD18FFA907072FFFA854FD05070D0707070D0707070D07%07070D0707070D0707070D0707070D0707070D0707070D070707FFFFFF7E%85FFFFA82F0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707070D0707070D0707070D07072FFFA830013084FD14FFA95A07%30A8FF5A0D07300730073007300730073007300730073007300730073007%300730073007300730073007300730070D5AFFFF8584FFFFFF070D073007%300730073007300730073007300730073007300730073007300730073007%30073007300730070D0784FFA90D0730FD12FF5A070784FF840707070D07%2F070D072F070D072F070D072F070D072F070D072F070D072F070D072F07%0D072F070D072F070D070784FF7EA9FFFF7E5A0707072F070D072F070D07%2F070D072F070D072F070D072F070D072F070D072F070D072F070D072F07%0D070D072F7EFF5A07077EFD0EFF8507075AFFA830070D0730072F073007%2F0730072F0730072F0730072F0730072F0730072F0730072F0730072F07%30072F0730072F0730AFA97EFFFF857EFF070D0730072F0730072F073007%2F0730072F0730072F0730072F0730072F0730072F0730072F0730072F07%3007072FAFAF5A073084FD0AFF84300130A8FF2F07070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707070D070D07302FA9FFFF7E7EFF840707070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707075AA9A92F072FA9FD07FF30072FA9FF85070D073007300730%073007300730073007300730073007300730073007300730073007300730%0730073007300730073007300730070D84FFFF855AFFFF54073007300730%073007300730073007300730073007300730073007300730073007300730%0730073007300730073007307EFF8430075AAFFFFFFF8507075AFF842F07%0D070D072F070D072F070D072F070D072F070D072F070D072F070D072F07%0D072F070D072F070D072F070D072F070D072F070D072F0784FFFF7E7EFF%FF5A07072F070D072F070D072F070D072F070D072F070D072F070D072F07%0D072F070D072F070D072F070D072F070D072F070707A9AF5A070D84FFFF%84075AFF2F07072F0730072F0730072F0730072F0730072F0730072F0730%072F0730072F0730072F0730072F0730072F0730072F0730072F0730072F%070D7EFFFFA95AFFFFA9072F0730072F0730072F0730072F0730072F0730%072F0730072F0730072F0730072F0730072F0730072F0730072F0730070D%075AFF5A07AFFFFFFF5307A85A072F0707070D0707070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707070D07070784FFFF7E7EFFFFA82F0707070D0707070D070707%0D0707070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707070D07075AA9077EFD05FF075AFF3007300730073007300730%073007300730073007300730073007300730073007300730073007300730%0730073007300730073007300730070E84FFFFA95AFFFFFF072F07300730%073007300730073007300730073007300730073007300730073007300730%073007300730073007300730070D2FFF2F30FD06FF8407A97E07070D072F%070D072F070D072F070D072F070D072F070D072F070D072F070D072F070D%072F070D072F070D072F070D072F070D072F070D0785FFFF7EA9FFFFA82F%070D072F070D072F070D072F070D072F070D072F070D072F070D072F070D%072F070D072F070D072F070D072F070D072F07A97E077EFD07FF302FFF2F%0D072F0730072F0730072F0730072F0730072F0730072F0730072F073007%2F0730072F0730072F0730070D0730072F0730072F073007077EFFFF7EA9%FFFFA90730072F0730070D0730072F0730072F0730072F0730072F073007%2F0730072F0730072F0730072F0730072F0730072F075AFF2F2FFD08FF7E%077EA9070D0707070D0707070D0707070D0707070D0707070D0707070D07%07070D0707070D0707070D070707302F07070D0707070D0707070D0784FF%857EFFFFFF5A07070D070707302F07072F0707070D0707070D0707070D07%07070D0707070D0707070D0707070D0707070D0707070D0707A87E07A9FD%09FF300DAF5A073007300730073007300730073007300730073007300730%07300730073007300730073007070785FF7E07300730073007300730070D%84FF5AFD04FF3007300730070D7EFF5A30072F0730073007300730073007%300730073007300730073007300730073007300730073007075AFF075AFD%0AFFAF075AA82F070D072F070D072F070D072F070D072F070D072F070D07%2F070D072F070D072F070D07075AFF84AF5A07072F070D072F070D072F07%7E5AFD04FF7E070D072F070D0784A8A9A85A0707072F070D072F070D072F%070D072F070D072F070D072F070D072F070D072F070D070D07FF2F0DA9FD%0BFF7E07AF5A07072F0730072F0730072F0730072F0730072F0730072F07%30072F0730072F072F075AA8FF5A077E84072F0730072F0730072F070D2F%FD04FFAF072F072F073007077E85075AAFAF2F070730072F0730072F0730%072F0730072F0730072F0730072F0730072F0730072F07A9A8077EFD0CFF%A80D2FFFFD05070D0707070D0707070D0707070D0707070D0707070D0707%072F070707A9A97E070707845AFD04070D0707070D070707A9FD04FF2F07%070D0707070D07847E0707077EFF7E2F070D0707070D0707070D0707070D%0707070D0707070D0707070D0707070D0730A82F07FD0EFF7E0784A90730%0730073007300730073007300730073007300730073007300730072F7EFF%8430075A842F84850730073007300730072F0785FD04FF5A070730073007%3007077E8507AF30072FA9FF84070D073007300730073007300730073007%3007300730073007300730070DA88507A9FD0FFF2F2FA954070D072F070D%072F070D072F070D072F070D072F070D072F0707075AA9A92F072FA9FFFF%07845A07070D072F070D072F075AFD04FF5A07070D072F070D072F07847E%07FFFF84300754A8FF2F07072F070D072F070D072F070D072F070D072F07%0D072F070D070753FF075AFD10FFA90784A80D072F0730072F0730072F07%30072F0730072F0730072F070D2FA9A95A072F7EFFFFFFA80D847E073007%2F0730072F0730AFFFFFFF84540730072F0730072F0707848507FD04FF85%07075AFFA830072F072F0730072F0730072F0730072F0730072F0730072F%07FF5A07A8FD11FF5A07FF53FD04070D0707070D0707070D0707070D0707%070D072F7EFF7E07075AA9FD04FFA907855A07070D0707070D07075AFFFF%FF7E847E07070D0707070D070707847E07A8FD05FF53070784FF84FD0507%0D0707070D0707070D0707070D0707070D077EA8075AFD12FFA90D54FF07%2F07300730073007300730073007300730070D077EFFA92F072FFD07FFA9%30847E073007300730072F07FFFFFFA885FFA90730073007300730070D84%8507FD07FFA85A0730A8FF5A0D0730073007300730073007300730073007%300730FF5A07FD14FF5A07A884070D072F070D072F070D072F070D072F07%072FFFA854013084FD08FFA907A95A07072F070D072F0730FFFFA95AA9FF%7E07072F070D072F070D07857E07A9FD08FFA907072FFFA854070D070D07%2F070D072F070D072F070D070784A90184FD15FF0D30FF30072F0730072F%0730072F0730070D0730A8FF5A070784FD0AFFA90D7E7E072F0730072F07%0D5AFFFF855AFFFFA9072F0730072F073007077E8507FD0BFF7E070784FF%A92F0D072F0730072F0730072F073007072FFF0D30FD16FF8402847EFD04%070D0707070DFD050784A884070753FD0CFFAF07845AFD04070D0707075A%FFFF7E7EFFFF7EFD04070D0707070D07847E07A9FD0BFFA85A012F7EFF5A%0D0707070D0707070D0707070D07A95A0784FD17FF3007FF540D07300730%0730073007305AFFA830075AA8FD0DFFA90D848507300730073007302FFF%FFAF7EFFFFA9072F07300730073007077E8507FD0EFFAF2F072FFFAF5A07%300730073007300730075AAF0E54FD18FFA8075AFF0707072F070D070D07%54A8FF2F0707A9FD0FFFAF07845A07070D072F070D07075AFF847EFFFF7E%07070D072F070D072F07847E0DAFFD0FFF7E2F075AA9A92F07070D072F07%0D072FA95A07AFFD19FF5A07A97E072F073007072FA9FF7E070D7EFD11FF%A80D847E0730072F0730072F0730A9FF5AFFFF850730072F0730072F0707%848507FD12FF7E070D7EFF8430072F073007077EAF077EFD1BFF0754A82F%0707072F5AFF7E0D075AA8FD12FFA907855A07070D0707070D070D072F7E%84FFFF5A07072F0707070D070707847E07A8FD12FFA92F0707A9A87EFD05%07FF2F2FAFFD1BFF8407AF8407075AFFAF2F072FAFFD14FFA930847E0730%0730073007300730070D7EFFFF845A30073007300730070D848507FD15FF%A830075AA9FF540D07A9840784FD1DFF2F07FF5AA9A85A072F7EFD16FFA9%07A95A07072F070D072F070D072F077EFFFF5AA98407070D072F070D0785%7E07A9FD16FF8407075AFF847EA90D2FFD1EFF84077EFF7E07077EFD18FF%A90D7E7E072F0730072F0730072F07077EFFFF8484FF540D072F07300707%7E8507FD19FF5A070785FF7E07A9FD1FFF2F0707072FA9FD19FFAF07845A%FD04070D0707070D0707077EFFFF597EFFA9070D0707070D07847E07A9FD%19FFA854072F075AFD20FFAF0730A8FD1BFFA90D84850730073007300730%0730070D7EFFFF7E2FFFFF300730073007077E8507FD1CFFA90D30AFFD21%FFA9A9FD1CFFAF07845A07070D072F070D072F0707075AFFFF535AFFFF07%0D070D072F07847E0DAFFD1DFFA8FD40FFA80D847E0730072F0730072F07%3030072FFF7E7EFFFF7E070730072F0707848507FD5FFFA907855A07070D%0707070D07072FFF7E5A5AA9FFFFA82F0707070D070707847E07A8FD5EFF%A930847E073007300730073007305AFD05FF8430073007300730070D8485%07FD5FFFA907A95A07072F070D072F070D07072F7E5A842F07072F070D07%2F070D07857E07A9FD5EFFA90D7E7E072F0730072F0730072F070730A9A9%5A072F0730072F073007077E8507FD5FFFAF07845AFD04070D0707070D07%07075AFFFF2FFD04070D0707070D07847E07A9FD5EFFA90D848507300730%07300730073007302FFFFF30073007300730073007077E8507FD5FFFAF07%845A07070D072F070D072F070D07075A5A072F070D072F070D072F07847E%0DAFFD5EFFA80D847E0730072F0730072F0730072F072F072F0730072F07%30072F0707848507FD5FFFA907855A07070D0707070D0707070D0707070D%0707070D0707070D070707847E07A8FD5EFFA930847E0730073007300730%07300730073007300730073007300730070D848507FD5FFFA907A95A0707%2F070D072F070D072F070D072F070D072F070D072F070D07857E07A9FD5E%FFA90D7E7E072F0730072F0730072F0730072F0730072F0730072F073007%077E8507FD5FFFAF078453FD1907017E7E07A9FD5EFFA90D84FF7E857EA9%84857EA984857EA984857EA984857EA984857EA98485FF8507FD5FFFAF07%547E847E847E847E847E847E847E847E847E847E847E847E847E847E842F%0DAFFD5EFFA830070D070D070D070D070D070D070D070D070D070D070D07%0D070D070D070D2FFD60FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9FFA8FFA9%FFA8FFA9FFA8FFA9FFA8FFA9FD30FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7790.8833 8490.9551 m-7699.0479 8490.9551 L-7699.0479 8486.6758 L-7790.8833 8486.6758 L-7790.8833 8490.9551 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7790.6631 8488.2754 m-7791 8488.3418 -7790.4814 8488.5313 -7790.8833 8488.3887 C-7790.8379 8488.2705 -7790.7725 8488.1816 -7790.6631 8488.2754 Cf-7700.1675 8488.4414 m-7701.2529 8489.2041 -7702.6816 8488.4336 -7703.8701 8488.9199 C-7704.0098 8488.9521 -7703.8354 8488.502 -7704.1484 8488.6025 C-7705.3008 8489.1953 -7707.1162 8488.8418 -7708.5195 8488.3848 C-7708.4346 8488.2666 L-7708.7021 8488.1816 -7709.0283 8488.5723 -7709.3115 8488.5176 C-7709.3135 8488.4395 -7709.2207 8488.4063 -7709.2861 8488.2979 C-7709.3574 8488.5352 -7709.7979 8488.4082 -7709.9189 8488.584 C-7710.0303 8488.4922 -7710.0195 8488.3047 -7710.1641 8488.2002 C-7710.3262 8488.4697 L-7710.7769 8489.1094 -7711.4209 8488.4258 -7712.0361 8488.7559 C-7712.0063 8488.6934 -7711.9453 8488.6445 -7711.9941 8488.584 C-7712.9814 8488.9727 -7714.2168 8488.8994 -7715.3208 8489.043 C-7715.2769 8488.9482 -7715.2363 8488.7754 -7715.3008 8488.668 C-7715.3555 8488.9512 -7715.6963 8489.0225 -7715.9922 8489.0781 C-7716.1255 8488.7871 -7716.4995 8489.3438 -7716.8467 8489.1826 C-7716.8169 8489.1191 L-7717.0732 8489.4238 -7717.1973 8488.9434 -7717.4053 8489.3086 C-7717.5684 8489.0801 L-7717.6807 8489.4902 -7717.9395 8488.8672 -7718.1514 8489.0762 C-7718.1445 8489.1602 L-7718.3442 8489.2598 -7718.4482 8489.0537 -7718.6338 8489.123 C-7718.6514 8489.0762 L-7719.0854 8489.1826 -7719.3379 8488.9551 -7719.3271 8489.2754 C-7719.4795 8489.0186 -7718.9063 8489.1582 -7719.1455 8488.7842 C-7720.5732 8489.1152 -7722.0459 8489.0498 -7723.4834 8489.0566 C-7723.6465 8488.9277 -7723.7505 8488.8887 -7723.7871 8488.7666 C-7723.9307 8488.832 -7724.3281 8488.8262 -7724.4585 8488.9902 C-7724.4102 8488.9834 -7724.5513 8488.8262 -7724.6274 8488.8105 C-7724.8887 8488.6895 -7724.9131 8489.1621 -7725.2002 8489.0186 C-7725.0859 8488.9336 -7725.0469 8488.8301 -7725.0854 8488.7109 C-7725.3301 8488.9609 -7725.6577 8488.9209 -7725.9473 8489.002 C-7725.9023 8488.9482 -7725.8325 8488.916 -7725.8433 8488.8154 C-7726.1602 8489.0986 -7726.4209 8488.7559 -7726.6982 8488.9346 C-7726.5947 8488.75 L-7727.0415 8488.5254 -7726.7266 8489.1367 -7727.1128 8489.0039 C-7727.02 8488.9453 -7727.0527 8488.873 -7727.0361 8488.7979 C-7727.3965 8489.1338 -7727.9795 8489.0225 -7728.3389 8489.1367 C-7728.3174 8489.1113 -7728.3232 8489.0605 Y-7728.7148 8489.1025 -7729.1245 8488.998 -7729.5552 8489.1445 C-7729.7119 8489.0625 -7729.5039 8488.6934 -7729.9185 8488.7617 C-7729.9033 8489.1328 -7730.6221 8488.9141 -7730.3779 8489.334 C-7730.7319 8489.2734 -7731.2925 8489.1338 -7731.5283 8489.2598 C-7731.3691 8489.1191 -7731.7007 8488.8066 -7731.4063 8488.7754 C-7731.6289 8488.5498 L-7731.5957 8488.3984 -7731.3999 8488.6016 -7731.4707 8488.4102 C-7731.6182 8488.4258 -7732.0479 8488.5723 -7732.1797 8488.5117 C-7732.4531 8488.7393 -7732.7041 8489.1641 -7733.1465 8489.2109 C-7732.9385 8489.0664 -7733.2646 8488.8018 -7733.1235 8488.7383 C-7733.7407 8489.4482 L-7733.8877 8489.4658 -7733.7725 8489.1563 -7733.9854 8489.2529 C-7733.9746 8489.3506 -7734.0674 8489.4121 -7734.1318 8489.4922 C-7734.1875 8489.4482 -7734.7441 8489.584 -7734.8081 8489.2178 C-7734.8735 8489.0762 -7734.5684 8489.1426 -7734.7314 8489.0117 C-7735.0029 8489.0146 -7735.0151 8489.1406 -7735.2871 8489.1465 C-7735.2925 8489.0977 L-7735.4717 8489.043 -7735.8213 8489.2529 -7735.6265 8489.4551 C-7735.5015 8489.4658 -7735.6738 8489.2354 -7735.4888 8489.3418 C-7735.6152 8489.5537 -7735.9312 8489.6133 -7736.2031 8489.6162 C-7736.1104 8489.5586 -7736.1216 8489.4609 -7736.0845 8489.3574 C-7736.4497 8489.6445 -7736.8369 8489.7354 -7737.2451 8489.8555 C-7737.2515 8490.0293 -7737.0928 8489.5391 -7737.0327 8489.6309 C-7737.5557 8489.3896 -7738.1128 8489.9727 -7738.5479 8489.6201 C-7738.4766 8489.5898 -7738.5098 8489.8672 -7738.5146 8489.8184 C-7738.7666 8489.7969 -7738.7549 8489.5449 -7738.9189 8489.6377 C-7738.9355 8489.4902 -7739.1255 8489.6855 -7739.2944 8489.7305 C-7739.3818 8489.8369 -7739.3384 8489.6582 -7739.1914 8489.6426 C-7739.4268 8489.7666 -7740.3691 8489.9941 -7740.9131 8489.7793 C-7740.9023 8489.877 -7741.2471 8490.1377 -7741.3721 8490.127 C-7741.3232 8489.8984 L-7741.4375 8489.7617 -7741.7422 8489.918 -7741.7632 8489.7227 C-7742.0303 8490 -7740.7344 8489.4863 -7741.0957 8489.7002 C-7741.1895 8489.5098 -7741.5991 8490.0645 -7741.5215 8489.7529 C-7741.7725 8489.7617 -7742.0161 8490.0186 -7742.2559 8489.8047 C-7742.1865 8489.8418 -7742.0522 8489.4873 -7742.2549 8489.5039 C-7742.6123 8489.5449 -7742.3564 8489.6133 -7742.6465 8489.6895 C-7742.8281 8489.7832 L-7742.8398 8490.0059 -7743.1475 8489.7529 -7743.0146 8490.002 C-7743.0586 8489.8184 -7743.5337 8490.1152 -7743.4971 8489.7461 C-7743.4473 8489.4551 L-7743.6016 8489.4766 -7743.7002 8489.7617 -7743.8213 8489.8896 C-7743.8418 8489.8633 -7743.8823 8489.8047 -7743.8745 8489.7578 C-7743.8994 8490.2031 -7744.2432 8489.7207 -7744.4268 8490.0645 C-7744.7505 8489.9102 -7745.2495 8490.0498 -7745.4023 8489.7734 C-7745.6514 8489.9082 -7745.8784 8490.0674 -7746.1621 8489.9727 C-7746.1055 8489.9307 -7746.0283 8489.918 -7746.0122 8489.8223 C-7746.1904 8489.6914 -7746.2344 8489.8086 -7746.3975 8489.8809 C-7746.3608 8489.8145 -7746.7539 8489.6201 -7746.9521 8489.4629 C-7747.1992 8489.5957 -7747.1143 8489.8359 -7747.1392 8489.9824 C-7747.3652 8489.543 -7747.8379 8490.2656 -7748.1211 8489.8672 C-7748.0352 8489.8066 -7747.7598 8489.6514 -7747.9658 8489.541 C-7748.1919 8489.1025 -7748.4219 8489.8643 -7748.7861 8489.6543 C-7748.6968 8490.0186 L-7748.8594 8489.793 -7749.2334 8490.2305 -7749.1963 8489.8594 C-7749.3184 8489.9902 -7749.6265 8489.7383 -7749.5859 8490.0938 C-7750.1846 8489.793 -7751.0425 8490.2754 -7751.4102 8489.6377 C-7751.4961 8489.6973 -7751.7104 8489.6367 -7751.6665 8489.8193 C-7751.5239 8490.0176 -7751.4673 8489.6777 -7751.4141 8489.8125 C-7751.4912 8489.8232 -7751.5078 8489.9209 -7751.5161 8489.9697 C-7751.7021 8489.8887 -7751.8486 8489.8633 -7751.6729 8489.5674 C-7752.0869 8489.3477 -7752.1001 8490.1719 -7752.6274 8490.0322 C-7752.6035 8489.8857 -7752.6436 8489.8301 -7752.7979 8489.8535 C-7753.0903 8490.1055 L-7753.4312 8490.0469 -7753.2842 8489.7705 -7753.2925 8489.5215 C-7753.4746 8489.5645 -7753.6973 8489.5527 -7753.7803 8489.7383 C-7754.0015 8489.4258 L-7753.8398 8489.6514 -7754.1514 8489.5762 -7754.2368 8489.6367 C-7754.1514 8489.5762 L-7754.1846 8489.4697 -7754.3955 8489.5352 -7754.5024 8489.5664 C-7754.4766 8489.7207 -7754.2617 8489.7832 -7754.1445 8489.8281 C-7754.2373 8489.9375 -7754.3823 8489.9121 -7754.5059 8490.041 C-7754.4648 8489.7969 -7754.8027 8489.8672 -7754.9473 8489.8418 C-7755.1133 8489.7891 -7755.1348 8490.0605 -7755.1831 8490.0527 C-7755.1875 8489.9258 -7755.4541 8490.0313 -7755.3247 8489.8535 C-7755.2681 8489.8125 -7755.1953 8489.9766 -7755.1016 8489.8643 C-7755.2109 8489.7705 -7755.1982 8489.5498 -7755.4258 8489.7109 C-7755.5967 8489.832 -7755.3818 8490.1934 -7755.7061 8490.0391 C-7755.6211 8489.9785 -7755.6055 8489.8809 -7755.5391 8489.793 C-7755.8433 8489.666 L-7755.8564 8489.8887 L-7755.8975 8489.832 -7755.8691 8489.8125 -7755.8877 8489.7832 C-7755.9785 8490.0176 -7756.3521 8489.8555 -7756.4209 8490.1191 C-7756.5742 8490.1426 -7756.7441 8489.9648 -7756.8906 8489.9395 C-7756.8623 8489.9199 L-7757.0415 8489.7891 -7757.2793 8489.875 -7757.4297 8490.0254 C-7757.4219 8489.9766 L-7757.5195 8489.959 -7757.7505 8489.9941 -7757.8735 8490.125 C-7758.1201 8489.957 -7757.9561 8489.2842 -7758.2295 8489.5645 C-7758.48 8489.5723 -7758.6221 8489.9727 -7758.5215 8490.1152 C-7758.9717 8489.9648 -7759.4834 8490.3281 -7759.9009 8489.9824 C-7759.9658 8490.0723 -7759.9248 8490.1289 -7760.0586 8490.1816 C-7760.7197 8490.0938 -7761.4551 8490.4453 -7761.9814 8490.0078 C-7761.79 8489.9141 -7761.9688 8489.7842 -7761.9727 8489.6582 C-7762.1309 8489.8574 -7762.1631 8489.4512 -7762.2197 8489.793 C-7762.2041 8489.9941 -7762.2197 8490.0918 -7762.0337 8490.1729 C-7762.4282 8490.2813 -7763.0283 8490.2813 -7763.2471 8490.0938 C-7763.1377 8490.1865 -7763.2227 8490.248 -7763.3086 8490.3086 C-7763.2803 8489.9873 -7763.5713 8489.9395 -7763.7915 8490.0527 C-7763.8223 8490.248 L-7763.9658 8490.0469 L-7764.0503 8490.1094 -7764.0591 8490.457 -7764.2773 8490.2695 C-7764.2891 8490.1934 -7764.3018 8490.1162 -7764.3418 8490.0605 C-7764.5693 8490.2207 -7764.8906 8490.4922 -7765.1377 8490.3262 C-7765.3398 8490.041 L-7765.4453 8490.0723 -7765.6235 8490.2441 -7765.4375 8490.3262 C-7765.8594 8490.1543 -7766.1309 8490.1328 -7766.2646 8489.8857 C-7766.9912 8490.4873 -7768.0459 8490.5117 -7768.8906 8490.4688 C-7768.8652 8490.3223 L-7769.0923 8490.1855 -7768.9834 8490.5781 -7769.1416 8490.4766 C-7769.0684 8490.3369 -7769.3145 8490.1729 -7769.1362 8490.002 C-7769.4609 8489.8477 -7769.5547 8490.2559 -7769.7656 8490.3223 C-7769.7979 8490.5146 -7769.5957 8490.1992 -7769.6367 8490.4434 C-7769.6729 8490.5117 -7770.0859 8490.293 -7770.1362 8490.584 C-7770.2178 8490.4697 -7770.1543 8490.2559 -7770.1104 8490.1377 C-7770.3086 8490.2793 L-7770.5513 8489.9395 -7769.7559 8489.6719 -7770.0107 8489.2529 C-7770.1934 8489.2979 L-7770.3682 8488.9941 -7769.71 8488.9551 -7770.1689 8488.8506 C-7770.3682 8488.9941 -7770.5381 8489.416 -7770.3608 8489.5449 C-7770.7754 8489.625 -7770.5527 8490.2383 -7770.9985 8490.2139 C-7771.1201 8490.043 -7770.6416 8490.1729 -7770.7275 8489.9336 C-7770.9375 8489.6992 -7771.1484 8490.0645 -7771.3354 8489.9824 C-7771.1279 8490.0918 -7771.3032 8490.3857 -7771.4375 8490.4395 C-7771.6641 8490.3018 -7771.29 8490.1641 -7771.6113 8490.1338 C-7771.6641 8490.3018 -7771.9595 8490.4277 -7771.7041 8490.5449 C-7771.8203 8490.9258 -7772.0381 8490.4395 -7772.2129 8490.7344 C-7772.3174 8490.4658 -7771.8823 8490.1152 -7772.2354 8489.9814 C-7772.1792 8490.2393 -7772.6704 8490.332 -7772.4839 8490.7139 C-7772.6221 8490.6406 -7772.6367 8490.4375 -7772.5361 8490.2793 C-7772.7334 8490.1201 -7773.0151 8490.75 -7773.0801 8490.2383 C-7773.1479 8490.502 L-7773.21 8490.416 -7773.2983 8490.3506 -7773.3994 8490.209 C-7773.5732 8490.2041 -7773.96 8490.5664 -7773.9443 8490.168 C-7774 8490.209 -7774.3975 8490.1914 -7774.2441 8490.4658 C-7773.9971 8490.6338 -7773.96 8490.2656 -7773.8223 8490.6377 C-7773.9971 8490.334 -7774.1787 8490.6777 -7774.3213 8490.7793 C-7774.3447 8490.625 L-7774.4297 8490.6855 -7774.6255 8490.6514 -7774.6787 8490.8184 C-7774.6133 8490.7305 -7774.6475 8490.625 -7774.7148 8490.5879 C-7774.8042 8490.8223 L-7775.1494 8490.9395 -7774.8857 8490.4102 -7775.2217 8490.4785 C-7774.9663 8490.2969 L-7775.0225 8490.3359 -7775.1367 8490.1162 -7775.2979 8490.1895 C-7775.3604 8490.4033 -7775.4775 8490.6602 -7775.5313 8490.8262 C-7775.7207 8490.9199 -7775.6162 8490.585 -7775.8027 8490.8047 C-7775.5586 8490.5469 L-7775.5215 8490.4766 -7775.7231 8490.1934 -7775.9761 8490.1992 C-7776.1377 8490.2734 -7776.3887 8490.582 -7776.1338 8490.6992 C-7776.2607 8490.7031 -7776.4385 8490.5723 -7776.3379 8490.416 C-7776.6255 8490.4902 -7776.2998 8490.6465 -7776.5479 8490.7793 C-7776.6494 8490.6367 -7776.9658 8490.4336 -7777.1563 8490.2266 C-7776.8975 8489.8682 L-7777.0693 8489.8643 L-7776.8467 8489.5781 -7777.1826 8489.6465 -7777.0566 8489.3438 C-7777.1743 8489.2969 -7777.3169 8489.3994 -7777.4307 8489.4785 C-7777.0864 8489.9629 -7777.8159 8490.1406 -7777.7158 8490.582 C-7778.1875 8490.7031 -7778.0107 8489.5078 -7778.5024 8490.1992 C-7778.4219 8490.3145 -7778.6533 8490.6504 -7778.3564 8490.5225 C-7778.6494 8490.4746 -7778.5557 8490.9658 -7778.9014 8490.7832 C-7778.6455 8490.6016 -7779.1763 8490.3359 -7778.8066 8490.0723 C-7778.8311 8490.2178 -7778.6001 8490.1826 -7778.5435 8490.1426 C-7778.6641 8489.9727 -7778.5186 8489.6973 -7778.8184 8489.6973 C-7779.0015 8489.7393 -7779.2524 8489.748 -7779.2158 8489.9785 C-7779.2085 8490.2314 -7778.9365 8489.9512 -7779.0537 8490.207 C-7779.4185 8490.2949 -7779.4795 8489.9102 -7779.6304 8490.3594 C-7779.3999 8490.3232 -7779.3423 8490.584 -7779.3467 8490.7578 C-7779.6143 8490.8633 L-7779.5625 8490.6953 L-7779.9922 8490.5742 -7779.6895 8491 -7780.1055 8490.9551 C-7780.3008 8490.623 L-7780.2017 8490.3369 -7779.6953 8490.75 -7779.7695 8490.2842 C-7780.04 8490.2656 -7780.1299 8490.502 -7780.3848 8490.3818 C-7780.3281 8490.3418 -7780.2505 8490.3301 -7780.1943 8490.2891 C-7780.2915 8490.2734 -7780.3877 8489.6563 -7780.7734 8490.0176 C-7780.9727 8490.1582 -7780.8262 8490.1826 -7780.8311 8490.3574 C-7781.2656 8490.4102 -7781.3955 8490.5879 -7781.6753 8490.6152 C-7781.6177 8490.2754 -7782.1699 8490.582 -7781.8608 8490.2344 C-7781.7188 8490.4336 -7781.0903 8490.4141 -7780.9365 8490.0898 C-7781.0947 8489.6865 -7780.5952 8490.1465 -7780.5024 8489.7383 C-7780.8506 8489.7285 -7780.8335 8489.332 -7780.8896 8489.0723 C-7780.9863 8489.0537 -7781.0801 8489.1641 -7781.1377 8489.2041 C-7781.1787 8489.4482 -7781.0522 8489.4453 -7781.0449 8489.6973 C-7781.4336 8489.6309 -7781.8081 8489.7666 -7782.0225 8490.0059 C-7782.1523 8489.8848 -7782.1113 8489.6406 -7781.9575 8489.6162 C-7782.4199 8489.6895 -7782.9141 8489.6563 -7783.3535 8489.582 C-7783.0693 8489.9814 -7783.8433 8489.6758 -7783.6494 8490.0078 C-7783.4141 8490.0977 -7783.2119 8490.3818 -7783.3418 8490.5605 C-7783.4888 8490.5352 -7783.3369 8490.3857 -7783.3984 8490.3008 C-7783.5859 8490.5186 -7783.6895 8489.9512 -7783.8735 8490.2949 C-7783.4512 8490.166 -7783.7915 8489.8086 -7783.7139 8489.4961 C-7784.0186 8489.6719 -7783.7007 8489.2734 -7784.0024 8489.2734 C-7784.3057 8489.4473 -7784.6787 8489.584 -7785.0161 8489.6514 C-7785.4399 8489.3555 -7786.0898 8489.6465 -7786.4683 8489.6582 C-7786.6665 8489.5 -7786.5322 8489.1465 -7786.7471 8489.085 C-7786.9995 8489.0918 -7786.5601 8489.4658 -7786.9336 8489.3047 C-7786.8975 8489.2344 L-7787.0107 8489.3154 -7787.5825 8488.9941 -7787.6929 8489.502 C-7787.5776 8489.1191 L-7787.6475 8489.084 -7787.7119 8489.1719 -7787.7695 8489.2129 C-7787.7725 8489.0879 -7787.8535 8488.9746 -7787.7402 8488.8926 C-7787.9707 8488.6289 -7788.2241 8488.9346 -7788.4746 8488.9453 C-7788.3135 8489.1719 L-7788.7422 8489.3496 -7789.0293 8489.125 -7789.4443 8489.2041 C-7789.4316 8488.9824 L-7789.6787 8489.1152 L-7789.6182 8488.8994 -7789.8447 8488.7617 -7789.9751 8488.9414 C-7789.3335 8488.3984 L-7789.1553 8488.5293 -7789.5283 8488.666 -7789.4165 8488.8848 C-7789.3213 8489.0762 -7788.9375 8489.0146 -7788.8755 8488.8018 C-7789.0225 8488.7773 -7789.0293 8488.8262 -7789.1436 8488.9063 C-7789.1919 8488.5977 -7788.9688 8488.6094 -7788.8584 8488.4033 C-7788.9355 8488.416 -7789.0449 8488.3223 -7789.0615 8488.4199 C-7788.9102 8488.2695 -7788.7578 8488.2461 -7788.5059 8488.2383 C-7788.6763 8488.3594 -7788.4131 8488.4297 -7788.4775 8488.5176 C-7788.4575 8488.2461 -7788.2168 8488.1621 -7787.9053 8488.2383 C-7787.6831 8488.5527 -7787.3208 8488.0361 -7786.96 8488.123 C-7787.1064 8488.3984 -7787.2935 8488.6191 -7787.5127 8488.7305 C-7787.2861 8488.8682 -7787.2607 8488.7227 -7787.0337 8488.8613 C-7786.9238 8488.6563 -7786.8457 8488.3418 -7786.5503 8488.2168 C-7786.5342 8488.4199 L-7786.2666 8488.3154 -7786.2666 8488.0146 -7785.9258 8488.0723 C-7785.3418 8488.1719 -7784.7407 8488.1719 -7784.2949 8488.1973 C-7784.2783 8488.3994 L-7784.0303 8487.9658 -7783.4521 8488.2393 -7783.1182 8488.0469 C-7782.5503 8488.2422 -7781.8848 8487.8535 -7781.5938 8488.2031 C-7780.5913 8488.0469 -7779.7148 8487.8945 -7778.6768 8487.9688 C-7778.8516 8488.2637 L-7778.6655 8488.0469 -7778.7305 8488.4336 -7778.5479 8488.3896 C-7778.7578 8488.1543 -7778.2949 8488.084 -7778.1665 8487.9033 C-7777.7041 8488.1328 -7777.1104 8487.8818 -7776.7007 8487.6758 C-7776.6846 8487.8789 L-7776.2705 8487.498 -7775.7759 8487.832 -7775.2598 8487.8945 C-7775.2007 8487.9785 -7775.1074 8488.1689 -7774.9536 8488.1465 C-7774.6738 8487.8184 -7774.5273 8487.8418 -7774.1167 8487.6367 C-7773.8169 8487.6367 -7773.3301 8487.7178 -7773.0254 8487.8457 C-7771.8975 8487.3848 -7770.7456 8487.6797 -7769.5732 8487.4023 C-7769.4888 8487.6406 L-7768.3521 8487.1309 -7766.9541 8487.5938 -7765.9839 8487.332 C-7766.0776 8487.7393 L-7765.7734 8487.8643 -7765.3843 8487.6328 -7765.4619 8487.3438 C-7765.1567 8487.4688 -7764.7007 8487.1465 -7764.5068 8487.4814 C-7764.1953 8487.5566 -7764.1255 8487.293 -7763.8662 8487.2383 C-7763.2422 8487.3926 -7763.0107 8487.3574 -7762.4224 8487.2813 C-7762.5684 8487.2559 L-7762.6328 8487.3457 -7762.6387 8487.5186 -7762.4922 8487.5449 C-7762.2725 8487.4307 -7761.6846 8487.6543 -7761.9033 8487.168 C-7761.2754 8487.4482 -7760.4385 8486.9395 -7759.8271 8487.3184 C-7759.8789 8487.1855 -7759.7246 8487.1602 -7759.6602 8487.0703 C-7759.1089 8487.0645 -7758.5293 8487.3359 -7758.0898 8487.1094 C-7758.0024 8487.1758 -7758.2295 8487.3359 -7758.0049 8487.3496 C-7757.8721 8487.2979 -7758.0024 8487.1758 -7757.8384 8487.1016 C-7756.9453 8486.8535 -7756.0303 8487.3574 -7755.2188 8487.293 C-7753.7754 8487.0361 -7752.2695 8487.166 -7750.8867 8487.123 C-7750.9023 8487.2207 L-7750.4395 8486.8477 -7749.8159 8487.6025 -7749.4463 8487.041 C-7749.3369 8487.1338 -7749.0283 8487.085 -7749.1094 8487.2734 C-7748.7407 8487.0098 -7748.0771 8487.5215 -7747.5439 8487.1865 C-7747.5928 8487.1777 -7747.6211 8487.1973 -7747.6777 8487.2393 C-7747.1392 8487.4551 -7746.6641 8487.1602 -7746.0957 8487.3555 C-7746.1533 8487.3975 -7746.2583 8487.4277 -7746.2754 8487.5254 C-7746.0557 8487.7129 -7745.7549 8487.1133 -7745.6348 8487.584 C-7745.5088 8487.5801 -7745.5449 8487.3477 -7745.6221 8487.3613 C-7744.3779 8487.5449 -7743.0498 8487.2441 -7741.7549 8487.1367 C-7740.8271 8487.418 -7741.6982 8487.9297 -7740.9663 8487.5781 C-7740.9063 8487.6689 -7740.9229 8487.3984 -7740.9131 8487.4961 C-7740.6299 8487.3643 -7740.4717 8488.0215 -7740.2754 8487.7754 C-7740.3564 8487.4863 -7740.1445 8487.6133 -7740.1387 8487.4375 C-7739.5713 8487.625 -7739.4575 8487.8857 -7739.0098 8487.666 C-7739.0435 8487.8184 L-7738.5186 8487.3887 -7737.9102 8487.6191 -7737.4673 8487.123 C-7734.5728 8487.0322 -7731.7983 8486.7578 -7728.9761 8486.7002 C-7726.1865 8486.7949 -7723.4551 8486.5723 -7720.6221 8486.8359 C-7719.9585 8487.2354 -7719.9087 8487.2246 -7719.1797 8487.0625 C-7719.2095 8487.127 -7719.2549 8487.1426 -7719.2061 8487.2031 C-7719.1699 8486.875 -7718.6929 8487.1719 -7718.6235 8486.8594 C-7717.5762 8486.9199 -7716.6113 8486.8301 -7715.5337 8486.8281 C-7715.7041 8486.8633 -7715.7896 8487.1309 -7715.5869 8487.1094 C-7715.3755 8486.8994 L-7715.3408 8486.9922 L-7715.2021 8486.9434 -7715.0513 8486.7813 -7715.1943 8486.6758 C-7712.4873 8486.3926 -7709.8242 8487.0498 -7707.1729 8486.9697 C-7706.5439 8487.1064 -7705.6475 8486.9814 -7704.9629 8486.9141 C-7702.9355 8487.3506 -7701.1084 8487.7041 -7699.0479 8487.3984 C-7699.3174 8488.2461 -7700.1675 8488.4414 Vf-7790.2578 8488.2422 m-7790.1855 8488.4063 -7789.9497 8488.4961 -7790.1377 8488.7139 C-7790.1611 8488.5605 -7790.2822 8488.3887 -7790.2578 8488.2422 Cf-7783.9619 8489.9297 m-7783.9536 8489.8809 -7783.8721 8489.9961 -7783.8521 8490.0225 C-7783.9297 8490.0352 -7784.0024 8490.1729 -7784.0645 8490.0879 C-7783.9854 8490.0762 -7783.9976 8489.998 -7783.9619 8489.9297 Cf-7782.3521 8490.0273 m-7782.3765 8490.1729 -7782.7207 8490.2891 -7782.9238 8490.3066 C-7782.3521 8490.0273 Lf-7780.8521 8490.6289 m-7780.7227 8490.752 -7780.7583 8490.8193 -7780.9326 8490.8154 C-7780.9453 8490.7383 -7780.8877 8490.6992 -7780.8521 8490.6289 Cf-7780.7456 8490.2969 m-7780.6211 8490.293 -7780.5591 8490.3789 -7780.4985 8490.4629 C-7780.5029 8490.3369 -7780.7871 8490.541 -7780.7456 8490.2969 Cf-7777.4893 8490.7207 m-7777.4111 8490.709 -7777.2417 8490.5879 -7777.1689 8490.75 C-7777.2505 8490.6367 -7777.5498 8490.9346 -7777.4893 8490.7207 Cf-7775.9761 8490.5 m-7775.9272 8490.5098 -7775.9072 8490.5361 -7775.8506 8490.4961 C-7775.7607 8490.5625 -7775.8555 8490.6689 -7775.9312 8490.6826 C-7775.9761 8490.5 Lf-7748.4287 8489.9141 m-7748.5923 8489.9863 L-7748.5684 8489.8418 L-7748.4287 8489.9141 Lf-7736.3574 8489.9063 m-7736.1943 8489.8145 -7736.2441 8490.043 -7736.2168 8490.0645 C-7736.3643 8490.0801 -7736.1621 8489.8848 -7736.3574 8489.9063 Cf-7729.8486 8489.1777 m-7729.8984 8489.1816 L-7729.8818 8488.8818 L-7729.8486 8489.1777 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -(ush Tool/ Charcoal/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(R=255 G=255 B=255)Pc0.862745 0.65098 0 0 0.192157 0.384314 0.682353 Xa(R=49 G=98 B=174)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au0 O0.862745 0.65098 0 0 0.192157 0.384314 0.682353 Xa0 J 0 j 1 w 4 M []0 d0 XR593.3135 497.9609 m660.5225 381.5581 L524.8037 303.1797 L660.5225 224.833 L593.3135 108.458 L457.5957 186.8057 L457.5957 30.0781 L323.2109 30.0781 L323.2109 186.8057 L187.4624 108.4277 L120.2549 224.833 L256.0024 303.209 L120.2549 381.5581 L187.4624 497.9609 L323.2109 419.5825 L323.2109 576.3096 L457.5957 576.3096 L457.5957 419.6133 L593.3135 497.9609 Lf*u0 0 0 0 1 1 1 Xa315.6367 22.5107 m315.6367 173.7002 L184.6875 98.0947 L109.9141 227.6074 L240.8633 303.2129 L109.9082 378.791 L184.6875 508.3037 L315.6367 432.6982 L315.6367 583.8809 L465.1641 583.8809 L465.1572 432.7256 L589.5244 504.5225 L596.0801 508.3037 L670.8604 378.7969 L539.9316 303.1846 L670.8604 227.6074 L596.0752 98.1221 L465.1641 173.7002 L465.1641 22.5107 L315.6367 22.5107 L315.6367 22.5107 Lf1 D330.7764 37.6514 m450.0234 37.6514 L450.0234 199.9121 L590.5332 118.7988 L650.1748 222.0645 L509.665 303.1797 L650.1748 384.334 L590.5371 487.623 L450.0234 406.5132 L450.0234 568.7422 L330.7764 568.7422 L330.7764 406.4688 L190.2339 487.6313 L130.5923 384.334 L271.1455 303.2178 L130.5923 222.0645 L190.2339 118.7686 L330.7764 199.9297 L330.7764 37.6514 L330.7764 37.6514 Lf*U*u0 D0.862745 0.65098 0 0 0.192157 0.384314 0.682353 Xa320.1807 27.0527 m320.1807 181.5703 L186.3564 104.2949 L116.1162 225.9453 L249.9448 303.2148 L116.1162 380.457 L186.3564 502.0947 L320.1807 424.835 L320.1807 579.3398 L460.6201 579.3398 L460.6201 424.8574 L591.7959 500.5845 L594.4131 502.0947 L664.6563 380.457 L530.8555 303.1826 L664.6563 225.9453 L594.418 104.3271 L460.6201 181.5703 L460.6201 27.0527 L320.1807 27.0527 L320.1807 27.0527 Lf1 D326.2295 33.1162 m454.5684 33.1162 L454.5684 192.0479 L592.2012 112.5967 L656.3828 223.7305 L518.752 303.1826 L656.3828 382.6694 L592.2012 493.8291 L454.5615 414.3779 L454.5615 573.2822 L326.2295 573.2822 L326.2295 414.335 L188.5679 493.8315 L124.3921 382.6694 L262.0537 303.2148 L124.3862 223.7305 L188.5679 112.5635 L326.2295 192.0596 L326.2295 33.1162 L326.2295 33.1162 Lf*U0 D0 0 0 0 1 1 1 Xa430.0186 353.417 m430.0186 352.2837 430.001 351.1421 429.9316 349.9297 c429.4092 339.9209 427.002 333.4072 423.6807 328.0811 c420.376 322.7617 416.1563 318.6118 412.0664 313.3374 c410.1484 310.835 407.4111 307.4434 404.4121 303.5283 c401.4043 299.5967 398.1343 295.1592 395.083 290.6074 c392.04 286.0127 389.2148 281.3574 387.1396 276.8926 c385.0649 272.4111 383.7402 268.1484 383.7139 264.3555 c383.7139 262.8994 383.9316 261.5039 384.4023 260.2051 C384.4629 256.1592 384.5073 251.748 384.5073 247.2842 c384.5073 246.3594 384.5073 245.4277 384.5073 244.5029 c384.5073 240.9717 384.5073 237.4844 384.4893 234.1445 C377.7061 239.4463 365.3428 252.498 365.3428 267.9131 C365.3428 267.9736 365.3428 268.043 365.3428 268.1133 C365.3428 268.374 365.3428 268.6621 365.3428 268.9238 C365.6309 278.75 367.8188 286.7715 371.7256 294.6533 c375.6572 302.5352 381.2896 310.2861 388.4561 319.5884 c392.4146 324.75 397.3672 330.252 401.334 336.2153 c405.3359 342.1958 408.3359 348.6484 408.3789 355.71 c408.3789 357.9595 408.0732 360.2788 407.3848 362.5371 C407.3848 362.6245 407.3848 362.7549 407.3848 362.9297 C407.3848 364.6563 407.4541 369.625 407.5156 375.3452 c407.5859 381.0645 407.6553 393.21 407.6719 398.0225 C412.7559 394.2905 419.8262 384.918 423.6016 378.6411 c427.334 372.4067 429.9746 365.2056 430.0186 353.417 cf385.7271 127.2188 m379.4497 132.9111 371.7856 141.3066 371.8818 150.6543 C371.8818 151.2031 371.8999 151.7695 371.9697 152.3281 C372.6924 160.7246 376.6426 168.0479 381.8389 175.1797 c387.0264 182.3203 393.479 189.208 399.2329 196.7588 c401.8926 200.29 406.3906 207.8672 406.4434 216.3936 c406.4434 217.4482 406.374 218.5293 406.1914 219.6191 C406.1914 244.3281 L414.8301 236.1934 419.9482 231.3633 420.5508 213.9785 C420.5674 213.6289 420.5674 213.2979 420.5674 212.9668 C420.5674 212.9238 420.5674 212.8799 420.5674 212.8105 C420.5674 191.2568 400.8022 174.0117 390.4526 162.0234 c388.7441 160.0186 387.271 158.1602 386.2065 156.3467 c385.126 154.5342 384.4629 152.8164 384.4023 151.0029 C384.4023 150.9326 L384.4023 150.8027 L384.4458 149.1289 385.1958 145.7275 385.501 144.29 C385.7271 127.2188 Lf403.1211 296.7188 m402.293 209.4355 L402.1973 209.1045 402.0928 208.7822 401.9883 208.459 C401.8135 207.9453 401.6221 207.4395 401.4395 206.9502 C401.3867 206.8291 401.3428 206.7158 401.2988 206.6025 C400.5669 204.8154 399.7559 203.2363 398.998 201.9287 C398.9883 201.9199 398.98 201.9121 398.98 201.9023 C398.8486 201.6846 398.7271 201.4756 398.6055 201.2666 C398.23 200.6641 397.8818 200.1328 397.5762 199.6797 C397.4805 199.54 397.3931 199.418 397.3145 199.2959 C397.1143 199.0166 396.9399 198.7822 396.8003 198.5898 C394.2026 195.1982 391.4121 191.8584 388.709 188.6416 C388.5439 188.4414 388.3862 188.25 388.2124 188.0488 C387.4888 269.1514 L387.5586 269.3945 387.6191 269.6387 387.6973 269.8916 C387.8467 270.3887 388.0117 270.9033 388.1948 271.4258 C388.2822 271.6875 388.3779 271.9492 388.4824 272.2197 C388.5786 272.4902 388.6836 272.7598 388.7969 273.0391 C389.1196 273.8672 389.4941 274.7217 389.9038 275.6113 c391.6738 279.4209 394.1328 283.6504 397.6289 288.9248 C397.9512 289.4043 398.2827 289.8926 398.6226 290.3896 C399.9912 292.3945 401.4902 294.4961 403.1211 296.7188 Cf400.9937 169.0684 m401.2988 169.4082 401.6035 169.7393 401.918 170.0791 C401.377 112.7979 L401.2734 101.6895 L401.1328 101.5674 401.0029 101.4453 400.8633 101.332 C398.8931 99.7627 395.3442 97.7744 389.6772 97.1992 C389.564 97.1816 389.459 97.1816 389.3457 97.1738 C389.2324 97.1641 389.1279 97.1641 389.0234 97.1553 C388.814 120.2871 L388.8667 120.2432 L388.7788 127.2617 L388.7007 133.0771 L388.7007 133.3467 L388.5176 154.2021 L388.5693 154.2988 388.6138 154.3945 388.6655 154.4902 C388.7183 154.5859 388.7705 154.6826 388.8315 154.7871 C389.8433 156.5127 391.3247 158.335 392.7808 160.0527 c394.3857 161.9189 396.2861 163.9678 398.291 166.1299 C398.71 166.583 399.1279 167.0449 399.564 167.5078 C400.0347 168.0137 400.5142 168.5361 400.9937 169.0684 Cf*u398.2476 500.2847 m398.2476 499.9971 398.1948 499.6919 398.1343 499.3164 C397.5156 495.8291 394.6724 491.8105 390.915 488.0088 c387.1396 484.1899 384.2451 480.9375 380.0254 478.27 c378.8569 477.5195 377.8804 476.5347 376.1367 475.9155 c374.3496 475.1836 370.1299 476.0288 368.9004 473.3696 c367.3926 470.6494 366.5894 465.541 366.1279 462.6025 c365.7705 457.3535 365.5439 449.4194 370.7749 433.8394 c373.8521 424.6846 382.9722 415.0239 Y382.9722 410.9438 383.1201 384.5952 383.1816 380.2275 C375.0996 387.6646 366.4678 400.4722 359.8418 415.312 c353.1982 430.1509 347.6357 448.1201 348.4028 462.5674 c348.5327 465.0869 349.2915 468.8804 350.1113 472.498 c350.9307 476.1421 352.8223 480.0308 353.5293 482.2715 c353.8784 483.2134 354.2349 486.2383 354.7842 487.8521 c355.3345 489.4478 355.8657 490.9204 356.2412 491.479 C358.7866 495.4282 360.8354 497.7476 362.7803 499.3164 c364.7241 500.8774 366.5811 501.6973 368.7437 502.6304 c374.2881 504.9487 380.5137 506.1182 385.7886 506.1182 c389.5903 506.1182 392.9033 505.499 395.083 504.4175 c397.2974 503.293 398.1948 502.0283 398.2476 500.2847 Cf1 D381.7603 498.0703 m382.5889 498.6279 384.2891 500.2583 Y378.3511 500.145 376.3633 499.5259 v374.707 499.0205 372.9019 497.939 372.9199 496.6143 C372.8755 495.9082 L374.3145 495.4458 376.5029 495.9771 v378.6826 496.5093 381.002 497.6079 381.7603 498.0703 cf*U0 D390.3657 74.7744 m389.6685 77.9922 389.3193 80.9824 389.1543 83.4766 C389.564 83.4063 389.9819 83.3535 390.418 83.3105 C390.8452 83.2588 391.2813 83.2139 391.7256 83.1885 C391.752 83.1885 L391.7783 83.1885 L392.2749 83.1621 392.7285 83.1621 393.1646 83.1621 C393.2344 83.1621 L393.5918 83.1621 393.9404 83.1709 394.2979 83.1885 C394.4458 83.1973 394.5942 83.1973 394.7422 83.2139 C394.978 83.2236 395.2046 83.2402 395.4404 83.2666 C395.6235 83.2842 395.8066 83.3018 395.9897 83.3271 C396.085 83.3369 396.1812 83.3457 396.2681 83.3623 C396.5557 83.3887 396.835 83.4326 397.123 83.4854 C397.4458 83.5283 397.7769 83.5898 398.0996 83.6592 C398.2129 83.6846 398.3345 83.7119 398.457 83.7383 C398.7188 83.79 398.9717 83.8516 399.2329 83.9121 C399.582 83.999 399.9302 84.0957 400.2793 84.1904 C400.5142 84.2607 400.7588 84.3301 400.9937 84.4092 C400.8022 81.7578 400.4097 78.4102 399.6338 74.7744 c398.8838 71.3223 395.4575 67.3027 395.0303 67.3027 C394.6035 67.3027 391.1064 71.3486 390.3657 74.7744 cf385.7886 509.1694 m385.6406 509.1694 385.4922 509.1694 385.3442 509.1602 C385.2217 522.9883 L389.8687 527.4092 395.4058 527.4092 v400.9414 527.4092 405.2578 522.9883 Y403.5918 346.9214 L403.584 346.896 403.5752 346.8696 403.5566 346.8433 C403.4355 346.5122 403.3047 346.1807 403.1641 345.8496 C402.8867 345.187 402.5801 344.5151 402.25 343.835 C402.0664 343.4604 401.875 343.0859 401.6738 342.7017 C401.5088 342.397 401.3428 342.083 401.168 341.7695 C400.4707 340.5137 399.6772 339.2324 398.7969 337.9063 c396.2861 334.1406 393.3477 330.5303 390.5054 327.043 C390.1997 326.6685 389.895 326.2935 389.5986 325.9268 C388.709 324.8281 387.8467 323.7563 387.0098 322.6919 C386.1812 416.2354 L385.6226 478.6094 L386.0498 478.9673 386.4688 479.3335 386.8784 479.709 C386.9653 479.7788 387.0527 479.8569 387.1313 479.9351 C388.6221 481.3042 390.0347 482.7427 391.4727 484.2163 C391.9966 484.7568 392.5278 485.3062 393.0864 485.8638 C397.7422 490.5811 400.4536 494.9224 401.1426 498.7852 C401.2207 499.2817 401.2988 499.7524 401.2988 500.2847 C401.2988 500.3281 L401.2988 500.3716 L401.2207 503.3101 399.6338 505.5244 396.4692 507.1377 c393.8184 508.4541 390.0347 509.1694 385.7886 509.1694 Cf377.9683 98.2891 m377.9937 98.2891 378.0381 98.2891 378.0635 98.2891 C378.6304 98.2891 379.8071 97.5654 381.4375 96.458 c383.1646 95.3506 385.501 94.0957 388.709 94.0957 C389.1016 94.0957 389.5459 94.1221 389.9819 94.165 C395.4141 94.7148 399.7471 96.5449 402.7725 98.9521 c405.7715 101.3584 407.498 104.3662 407.6719 107.252 C407.6719 107.252 407.6719 107.2783 V407.6719 107.3037 407.6719 107.3486 407.6719 107.4785 C407.542 109.2656 406.748 112.0039 404.917 113.9746 C405.1963 127.75 L410.8984 122.5361 415.5801 114.1924 416.3477 110.3467 c416.6006 109.2656 416.7051 108.2109 416.7051 107.1211 C416.7051 107.1035 416.7051 107.0771 416.7051 107.0605 C416.7051 101.7861 413.8369 96.5449 409.416 92.6396 c405.0049 88.751 399.0581 86.2139 393.2344 86.2139 C393.208 86.2139 393.1909 86.2139 393.1646 86.2139 C392.7456 86.2139 392.3447 86.2139 391.9268 86.2305 C388.9014 86.4316 386.4512 87.0938 384.376 88.0889 c382.2749 89.082 380.5571 90.4512 379.0317 91.9941 c376.7124 94.3574 376.2065 95.9092 376.2065 96.6152 C376.2065 96.6328 376.2065 96.6328 376.2065 96.6582 C376.2065 96.6846 376.2065 96.7197 376.2065 96.7461 C376.2065 97.5654 377.0869 98.0273 377.5059 98.2021 C377.7061 98.2891 377.8369 98.2891 377.9683 98.2891 CfULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF